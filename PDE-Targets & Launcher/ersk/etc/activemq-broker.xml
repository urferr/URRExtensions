<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
        
    <!-- 
    Do not remove! This fragment exposes server properties in this configuration file.
    Exposed properties:
    - brokerName - The name of the broker given in service-configuration.xml
    -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
           <bean class="com.ers.re.integration.service.pub.api.v1.config.util.DefaultSpringProperties" />
        </property>
    </bean>
    
	<!-- The <broker> element is used to configure the ActiveMQ broker. -->
	<broker xmlns="http://activemq.apache.org/schema/core" brokerName="${brokerName}" 
		dataDirectory="./data/amq-broker" 
		persistent="false" 
		start="false"
        tmpDataDirectory="./target/activemq-tmp"
		>

		<!-- For better performances use VM cursor and small memory limit. For 
			more information, see: http://activemq.apache.org/message-cursors.html Also, 
			if your producer is "hanging", it's probably due to producer flow control. 
			For more information, see: http://activemq.apache.org/producer-flow-control.html -->
		<destinationPolicy>
			<policyMap>
				<policyEntries>
					<policyEntry topic=">" producerFlowControl="false">
						<!-- The constantPendingMessageLimitStrategy is used to prevent slow 
							topic consumers to block producers and affect other consumers by limiting 
							the number of messages that are retained For more information, see: http://activemq.apache.org/slow-consumer-handling.html -->
						<pendingMessageLimitStrategy>
							<constantPendingMessageLimitStrategy limit="1000" />
						</pendingMessageLimitStrategy>
					</policyEntry>
					<policyEntry queue=">" producerFlowControl="false" memoryLimit="100mb">
						<!-- Use VM cursor for better latency For more information, see: http://activemq.apache.org/message-cursors.html--> 
						<pendingQueuePolicy>
                            <fileQueueCursor/> 
                        </pendingQueuePolicy> 
					</policyEntry>
				</policyEntries>
			</policyMap>
		</destinationPolicy>


		<!-- The managementContext is used to configure how ActiveMQ is exposed 
			in JMX. By default, ActiveMQ uses the MBean server that is started by the 
			JVM. For more information, see: http://activemq.apache.org/jmx.html -->
		<managementContext>
			<managementContext createConnector="false" />
		</managementContext>

		<!-- Configure message persistence for the broker. The default persistence 
			mechanism is the KahaDB store (identified by the kahaDB tag). For more information, 
			see: http://activemq.apache.org/persistence.html -->
		<persistenceAdapter>
			<kahaDB directory="./data/kahadb" />
		</persistenceAdapter>

		<!-- The systemUsage controls the maximum amount of space the broker will 
			use before slowing down producers. For more information, see: http://activemq.apache.org/producer-flow-control.html 
			If using ActiveMQ embedded - the following limits could safely be used: 
			<systemUsage> 
				<systemUsage> 
					<memoryUsage> 
						<memoryUsage limit="20 mb"/> 
					</memoryUsage> 
					<storeUsage> 
						<storeUsage limit="1 gb"/> 
					</storeUsage> 
					<tempUsage> 
						<tempUsage limit="100 mb"/> 
					</tempUsage> 
				</systemUsage> 
			</systemUsage> -->
		<systemUsage>
			<systemUsage>
				<memoryUsage>
					<memoryUsage limit="64 mb" />
				</memoryUsage>
				<storeUsage>
					<storeUsage limit="100 gb" />
				</storeUsage>
				<tempUsage>
					<tempUsage limit="50 gb" />
				</tempUsage>
			</systemUsage>
		</systemUsage>
		
<!-- 		<networkConnectors> -->
<!--           <networkConnector name="default" uri="multicast://default"/> -->
<!--         </networkConnectors> -->
        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <!-- 
           <transportConnector name="openwire" uri="tcp://0.0.0.0:61616" discoveryUri="multicast://default"/>
            -->
            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
            <!--             <transportConnector name="openwire" uri="vm://localhost:9003"/> -->
            <transportConnector name="openwire" uri="tcp://localhost:9012"/>
            <!--
                <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="stomp" uri="stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="ws" uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            -->
        </transportConnectors>
		
    </broker>

</beans>
